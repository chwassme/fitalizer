package ch.chwassme.fitalizer;

import java.util.Collection;
import java.util.DoubleSummaryStatistics;
import java.util.function.IntConsumer;

import org.apache.commons.math3.stat.Frequency;
import org.apache.commons.math3.stat.descriptive.DescriptiveStatistics;
import org.apache.commons.math3.stat.descriptive.SummaryStatistics;

public class SegmentAnalyzer {

  public void analyze(Collection<Segment> segments) {
	DoubleSummaryStatistics distance = segments.stream().mapToDouble(s -> s.getDistance()).summaryStatistics();
	DoubleSummaryStatistics height = segments.stream().mapToDouble(s -> s.getHeight()).summaryStatistics();
	DoubleSummaryStatistics grade = segments.stream().mapToDouble(s -> s.getGrade()).summaryStatistics();
	System.out.println(distance);
	System.out.println(height);
	System.out.println(grade);
	final Frequency frequency = new Frequency();
	final DescriptiveStatistics stats = new DescriptiveStatistics(DescriptiveStatistics.INFINITE_WINDOW);
	segments.stream().mapToInt(s -> (int) Math.round(s.getGrade())).forEach(new IntConsumer() {

	  @Override
	  public void accept(int grade) {
		frequency.addValue(grade);
		stats.addValue(grade);
	  }
	});
  }
}
