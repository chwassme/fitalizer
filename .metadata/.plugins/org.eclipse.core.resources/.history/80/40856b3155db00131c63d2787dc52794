package ch.chwassme.fitalizer;

import java.io.FileInputStream;

import com.garmin.fit.Decode;
import com.garmin.fit.MesgBroadcaster;
import com.garmin.fit.RecordMesg;
import com.garmin.fit.RecordMesgListener;

public class Main {

	private static class Listener implements RecordMesgListener {

		public void onMesg(RecordMesg mesg) {
			System.out.println(mesg.toString());
		}

	}

	public static void main(String[] args) {

	      Decode decode = new Decode();
	      MesgBroadcaster mesgBroadcaster = new MesgBroadcaster(decode);
		Listener listener = new Listener();
		String filename= "test.fit";

	      try {
	         in = new FileInputStream(filename);
	      } catch (java.io.IOException e) {
	         throw new RuntimeException("Error opening file " + args[0] + " [1]");
	      }

	      try {
	         if (!Decode.checkIntegrity((InputStream) in))
	            throw new RuntimeException("FIT file integrity failed.");
	      } finally {
	         try {
	            in.close();
	         } catch (java.io.IOException e) {
	            throw new RuntimeException(e);
	         }
	      }

	      try {
	         in = new FileInputStream(filename);
	      } catch (java.io.IOException e) {
	         throw new RuntimeException("Error opening file " + filename + " [2]");
	      }

	      mesgBroadcaster.addListener((FileIdMesgListener) listener);
	      mesgBroadcaster.addListener((UserProfileMesgListener) listener);

	      try {
	         mesgBroadcaster.run(in);
	      } catch (FitRuntimeException e) {
	         System.err.print("Exception decoding file: ");
	         System.err.println(e.getMessage());

	         try {
	            in.close();
	         } catch (java.io.IOException f) {
	            throw new RuntimeException(f);
	         }

	         return;
	      }

	      try {
	         in.close();
	      } catch (java.io.IOException e) {
	         throw new RuntimeException(e);
	      }

	      System.out.println("Decoded FIT file " + filename + ".");
	}
	
}
